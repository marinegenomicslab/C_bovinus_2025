#Trimming data
```{bash}```
SLURM_DIR=$(echo "$WORK/slurm")

cp -s $SLURM_DIR/trim_config.file .
cp -s ../../reference/Cbovinus_reference.fasta ./reference.fasta
sbatch $SLURM_DIR/dDocent_trimming.slurm

#Making mapping directories
```{bash}```
cd ../../mapping
mkdir Black

#Mapping data
```{bash}```
cd Black
cp -s ../../data/Black/*.fq.gz .
cp -s ../../reference/Cbovinus_reference.fasta ./reference.fasta
cp -s $SLURM_DIR/map_config.file .
sbatch $SLURM_DIR/dDocent_mapping.slurm
sbatch $SLURM_DIR/Map_sum.slurm

#Filtering bam files
```{bash}```
sbatch $SLURM_DIR/dDocent_bamfiltering.slurm

#Making coverage files for all data
```{bash}```
sbatch $SLURM_DIR/dDocent_cov.slurm

#Preparing folder for SNP calling
```{bash}```
mkdir ../../SNP_calling_Black
cd ../../SNP_calling_Black
mkdir tmp
ls ../mapping | while read i; do echo $i; cp -s ../mapping/$i/*.bam* .; rm cat*; done
ls ../mapping | while read i; do echo $i; cp -s ../mapping/$i/*.cov.stats .; done
ls ../mapping | while read i; do echo $i; cat ../mapping/$i/mapped.bed >> all_mapped.bed; done

#Removing Black C. variegatus and unknown species
```{bash}```
tail -n+49 namelist | while read i; do rm ${i}*; done

#Making the mapped.bed file
```{bash}```
sbatch $SLURM_DIR/dDocent_bed.slurm

#Preparing popmap
```{bash}```
ls *.bam | sed 's/.bam//g' > namelist
cut -f1 -d "_" namelist > p; paste namelist p > popmap; rm p
#Editting popmap
sed -i 's/\tSamp/\tBlack/g' popmap
sed -i 's/-RG//g' popmap
nano popmap		#Changing Samp pop to Samp2 for Black samples 73-92
sbatch $SLURM_DIR/dDocent_cat.slurm

#Splitting cat.bam for SNP calling
```{bash}```
sbatch --export=NODES=8 $SLURM_DIR/dDocent_split.slurm
ls -d *.node | while read i; do cd $i; cp -s ../../reference/Cbovinus_reference.fasta ./reference.fasta; cd .. ; done

#SNP calling on normal nodes, scripted to limit to 8 nodes
```{bash}```
ulimit -s 81920
ls -d *.node | while read i; do cd $i; ulimit -s 81920; sbatch $SLURM_DIR/dDocent_freebayes.slurm; cd ..; sleep 2; done

#Checking to see if nodes have the correct number of vcf files with data in them
```{bash}```
ls -d *.node | while read i; do echo "checking $i"; cd $i; BEDS=$(ls mapped.*.bed | wc -l);	VCF=$(find . -name "*.vcf" -size +62k | wc -l); if [ $VCF -lt $BEDS ]; then echo $i "did not complete all the vcf files properly"; fi; if [ $(find . -name "*.vcf" | wc -l) -gt $BEDS ]; then echo $i "has too many vcf files present"; fi; cd ..; done

#Checking to see if vcf file have the same number of contigs in the header as the reference.fasta has
```{bash}```
ls -d *.node | while read i; do echo "checking $i"; cd $i; ls raw.*.vcf | while read j; do VCF=$(head -n1 $j| grep "##" | wc -l); if [ $VCF -eq 0 ]; then echo $i $j "missing complete header"; echo ${i}/${j} >> ../bad.vcf; fi; done; cd ..; done

#Combine all vcfs in each node
```{bash}```
ls -d *.node | while read i; do cd $i; sbatch $SLURM_DIR/dDocent_combine_node.slurm; cd ..; sleep 5; done

#Preparing to combine all the vcf files
```{bash}```
mkdir vcf
cd vcf

ls -d ../*.node | while read i; do 
NODE=$(echo $i | sed 's:../::g' | cut -f1 -d .)
cp -fs $i/cat.vcf ./raw.$NODE.vcf
done

#Combining all the vcf files
```{bash}```
sbatch $SLURM_DIR/dDocent_combine.slurm
